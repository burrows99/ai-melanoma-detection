services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      shm_size: '2gb'
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: melanoma-detection
    restart: unless-stopped
    ports:
      - "7860:7860"
    volumes:
      - ./base:/app/base
      - ./data:/app/data
      - ./result:/app/result
    environment:
      - WANDB_MODE=disabled
      - PYTHONUNBUFFERED=1
      - GRADIO_SERVER_NAME=0.0.0.0
      - GRADIO_QUEUE=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    # Uncomment for GPU support
    # runtime: nvidia
    # environment:
    #   - NVIDIA_VISIBLE_DEVICES=all

  train:
    build:
      context: .
      dockerfile: Dockerfile
      shm_size: '2gb'
    volumes:
      - ./base:/app/base
      - ./data:/app/data
      - ./result:/app/result
    environment:
      - WANDB_MODE=disabled
      - PYTHONUNBUFFERED=1
    command: python -u train.py
    profiles: ["cli"]

  eval:
    build:
      context: .
      dockerfile: Dockerfile
      shm_size: '2gb'
    volumes:
      - ./base:/app/base
      - ./data:/app/data
      - ./result:/app/result
    environment:
      - PYTHONUNBUFFERED=1
    command: python -u evaluate.py
    profiles: ["cli"]

  # Jupyter Notebook service - temporarily disabled
  # notebook:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: melanoma-notebook
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - ./base:/app/base
  #     - ./data:/app/data
  #     - ./result:/app/result
  #     - .:/app/workspace
  #   environment:
  #     - JUPYTER_TOKEN=melanoma
  #   command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='melanoma'
  #   restart: unless-stopped
